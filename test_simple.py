#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
"""
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def test_simple_version():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –≤–µ—Ä—Å–∏–∏"""
    print("üß™ –¢–ï–°–¢ –ü–†–û–°–¢–û–ô –°–¢–ê–ë–ò–õ–¨–ù–û–ô –í–ï–†–°–ò–ò")
    print("=" * 35)
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    try:
        import requests
        print(f"‚úÖ requests: {requests.__version__}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ requests: {e}")
        return False
    
    try:
        import openai
        print(f"‚úÖ openai: {openai.version.VERSION}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ openai: {e}")
        return False
    
    try:
        import dotenv
        print("‚úÖ python-dotenv —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ dotenv: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        from config import TELEGRAM_BOT_TOKEN, OPENAI_API_KEY
        print("‚úÖ config –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        print(f"   Telegram —Ç–æ–∫–µ–Ω: {TELEGRAM_BOT_TOKEN[:10]}...")
        print(f"   OpenAI –∫–ª—é—á: {OPENAI_API_KEY[:20]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ config: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –î—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    try:
        from validators import validator
        from database import db_manager
        print("‚úÖ validators –∏ database –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
        return False
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram API
    try:
        api_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getMe"
        response = requests.get(api_url, timeout=10)
        if response.json().get('ok'):
            bot_info = response.json()['result']
            print(f"‚úÖ Telegram API —Ä–∞–±–æ—Ç–∞–µ—Ç: @{bot_info['username']}")
        else:
            print("‚ùå Telegram API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {e}")
        return False
    
    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
    return True

def test_openai_simple():
    """–¢–µ—Å—Ç OpenAI API"""
    print("\nüîå –¢–ï–°–¢ OPENAI API...")
    try:
        import openai
        from config import OPENAI_API_KEY
        
        openai.api_key = OPENAI_API_KEY
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "user", "content": "–°–∫–∞–∂–∏ –ø—Ä–æ—Å—Ç–æ '–ü—Ä–∏–≤–µ—Ç'"}
            ],
            max_tokens=10
        )
        
        if response and response['choices']:
            result = response['choices'][0]['message']['content']
            print(f"‚úÖ OpenAI API —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: '{result.strip()}'")
            return True
        else:
            print("‚ùå OpenAI API –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ OpenAI API: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–°–¢–û–ô –í–ï–†–°–ò–ò")
    print("=" * 40)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
    components_ok = test_simple_version()
    
    if components_ok:
        response = input("\n‚ùì –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ OpenAI? (–¥–∞/–Ω–µ—Ç): ").lower()
        if response in ['–¥–∞', 'yes', 'y', '–¥']:
            openai_ok = test_openai_simple()
        else:
            openai_ok = True
            print("‚è≠Ô∏è –¢–µ—Å—Ç OpenAI –ø—Ä–æ–ø—É—â–µ–Ω")
    else:
        openai_ok = False
    
    print(f"\n{'='*40}")
    if components_ok and openai_ok:
        print("üéâ –í–°–ï –ì–û–¢–û–í–û –ö –ó–ê–ü–£–°–ö–£!")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main_simple_stable.py")
    else:
        print("‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã!")
        if not components_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏")
        if not openai_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å OpenAI API")
