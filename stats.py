#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
"""
import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import db_manager
from datetime import datetime
import json

def print_stats():
    """–í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞"""
    print("=" * 50)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê ASSERTIVE.ME BOT")
    print("=" * 50)
    
    try:
        stats = db_manager.get_user_stats()
        
        print(f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['unique_users']}")
        print(f"üìù –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['total_requests']}")
        print()
        
        print("üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º —Å–æ–æ–±—â–µ–Ω–∏–π:")
        for msg_type, count in stats['message_types'].items():
            print(f"  ‚Ä¢ {msg_type}: {count}")
        print()
        
        print("üèÜ –¢–û–ü-10 —á–∞—Ç–æ–≤-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–µ—Ä–µ—Å—ã–ª–æ–∫:")
        if stats['top_chats']:
            for i, (title, chat_id, count) in enumerate(stats['top_chats'], 1):
                title_display = title if title else f"Chat {chat_id}"
                print(f"  {i}. {title_display}: {count} —Å–æ–æ–±—â–µ–Ω–∏–π")
        else:
            print("  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Å—ã–ª–∫–∞—Ö")
        
        print()
        print(f"üìÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

def export_stats_json():
    """–≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ JSON —Ñ–∞–π–ª"""
    try:
        stats = db_manager.get_user_stats()
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è JSON
        export_data = {
            'timestamp': datetime.now().isoformat(),
            'unique_users': stats['unique_users'],
            'total_requests': stats['total_requests'],
            'message_types': stats['message_types'],
            'top_chats': [
                {
                    'title': title,
                    'chat_id': chat_id,
                    'count': count
                }
                for title, chat_id, count in stats['top_chats']
            ]
        }
        
        filename = f"stats_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(export_data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Ñ–∞–π–ª: {filename}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "--export":
        export_stats_json()
    else:
        print_stats()
        print("\nüí° –î–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ JSON –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python stats.py --export")
