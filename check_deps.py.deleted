#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∏—Ö –≤–µ—Ä—Å–∏–π
"""

def check_dependencies():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
    try:
        print("üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
        
        import telegram
        print(f"‚úÖ telegram: {telegram.__version__}")
        
        from telegram.ext import Application
        print("‚úÖ Application –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from telegram.ext import CommandHandler, MessageHandler, filters
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        import openai
        print(f"‚úÖ openai: {openai.__version__}")
        
        import dotenv
        print(f"‚úÖ python-dotenv: {dotenv.__version__}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤–µ—Ä—Å–∏–π
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã...")
    try:
        import pkg_resources
        installed_packages = [d for d in pkg_resources.working_set]
        
        telegram_packages = [p for p in installed_packages if 'telegram' in p.project_name.lower()]
        for pkg in telegram_packages:
            print(f"üì¶ {pkg.project_name}: {pkg.version}")
            
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏–∏: {e}")
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è Application
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Application...")
    try:
        from config import TELEGRAM_BOT_TOKEN
        from telegram.ext import Application
        
        app = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
        print("‚úÖ Application —Å–æ–∑–¥–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
        
        # –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        from telegram.ext import CommandHandler
        
        async def dummy_handler(update, context):
            pass
            
        app.add_handler(CommandHandler("test", dummy_handler))
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Application: {e}")
        import traceback
        print("üìú Traceback:")
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = check_dependencies()
    if success:
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ minimal_test.py")
    else:
        print("\nüí• –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏!")
